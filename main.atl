keys;0;dup;set'keys'; // First we handle the keyboard, leaving the stack alone.
include'inc\nav.atl';
// See https://wiki.libsdl.org/SDL2/SDL_Scancode.
0;dup;[41 42 0];s;first;ifn'go';
quit;  // Quit if escape pressed.
l'go';
0;dup;[30 31 0];s;first;ifn'go2';
load'main.atl';
l'go2';
0;dup;[31 32 0];s;first;ifn'go3';
load'inc\fire.atl';
l'go3';
0;dup;[32 33 0];s;first;ifn'go4';
load'inc\mandelbrot.atl';
l'go4';
pop; // pop keys

input; // deal with input, a 6 value rank 1 tensor; three axes then three buttons.
0;dup;[3 4 0];s;first;2;-;if'nodblclick';
load'inc\fire.atl';l'nodblclick'; // Load next demo on double click.

[1.2];1;dup;[2 3 0];s;^;get'zoom';*;set'zoom' 1; // set zoom unconditionally
0;dup;[3 4 0];s;first;ifn'nomouse'; // if mouse button 1 not held jump to nomouse
0;dup;[0 2 0];s;[-1 1];*;get'offs';+;set'offs' 2;
l'nomouse';
pop; // pop input

size;if'started';


// Draw the text just once.
img'inc\font.bmp';
'Hello world! Esc to exit. Double click/tap or   ';e;
'press the 1 - 3 keys to see the different demos.';e;0;cat;
'1. This text.                                   ';e;0;cat;
'2. Fire.                                        ';e;0;cat;
'3. A mandelbrot set with peturbations.          ';e;0;cat;
[0 1];t;1;r;
0;dup;shape;[6 8];*;0;dup;set'tsize' 2;
c''
float x = float( t.x )\
float y = float( t.y )\
ret[0] = ( ( mod( floor( x ), 6.0 ) != 5.0 ?
          b( ivec4( mod( floor( x ), 6.0 ),
          mod( y, 8.0 ) + 1328.0 - 8.0 * a( ivec4( floor( x / 6.0 ), floor( y / 8.0 ), 0.0, 0.0 ) )
	  ,1.0, 0.0 ) ) : 1.0 ) )\
' 2 1;0;dup;
// set zoom and offs
windowSize;first;get'tsize';first;10;+;/;e;set'zoom' 1;
windowSize;get'tsize';get'zoom';first;2;rep;*;-;[-2 -2];/;set'offs' 2;
l'started';
pop;

get'keys';[0 32 0];s;print;pop;

windowSize;set'wsize' 2;
0;dup;
get'wsize';[3];0;cat;
c''
vec4 tf = vec4( t )\
ret[0] = ( tf.x + offs.x >= 0.0 && tf.y + offs.y >= 0.0 &&
           tf.x + offs.x < tsize.x * zoom && tf.y + offs.y < tsize.y * zoom ) ?
           1.0 - a( ivec4( ( tf.xy + offs ) / zoom, 0, 0 ) ) : 0.0\
' 1 1;

