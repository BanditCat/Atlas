keys;set'keys';input;set'input'; // Set input variables

'main.atl';
include'inc\stdlib.atl';
include'inc\nav.atl'; 


// init code
size;if'started';
[200];set'sqrtParticles' 1;
get'sqrtParticles';[2];^;[3];*;first;set'vertexCount';

nav3d;[0 0 1.8];set'origin' 3; // set origin
0;set'time';

6;get'sqrtParticles';0;dup;0;cat;[4];0;cat;
c'''
float hash( vec2 p, float time ){
    float h = dot( p, vec2( 127.1, 311.7 ) ) / 1000.0 + fract( time * 1.2123438709 )\
    return fract( sin( h ) * 43758.5453123 )\
}
'
ret[0] = vec4( hash( tf, 0.0 ) * 2.0 - 1.0, hash( tf, 1.0 ) * 2.0 - 1.0, hash( tf, 2.0 ) * 2.0 - 1.0,
               pow( ( hash( tf, 3.0 ) * 10.0 + 1.0 ) * 0.00001, 1.0 / 3.0 ) )\
' 0 1 4; // Randomly place particles



[[[-0.5 -0.28868 0 1] [1 0 0 1]]
 [[ 0   0.57735  0 1] [0 1 0 1]] 
 [[ 0.5 -0.28868 0 1] [0 1 1 1]]];
6;[3 2 4];c''''
vec4 r = vec4( a( ivec4( tf, 0, 0 ) ),
               a( ivec4( tf, 1, 0 ) ),
               a( ivec4( tf, 2, 0 ) ),
               a( ivec4( tf, 3, 0 ) ) )\
ret[0] = r\' 1 1 4;   // take our vertices and colors and put them in a texture.




1;
l'started';


get'time';timeDelta;+;set'time';
[90];windowSize;0;cat;[0.1 10];0;cat;proj;set'proj' 16;
get'time';[0 1 0];rot;set'rot' 16;

pop;

nav3d;

1;dup;1;dup;

get'vertexCount';windowSize;[4];0;cat;
additive;
c'
out vec4 color\
'
vec4 vert = af( vec2( float(i%3) + 0.5, 0 ) )\
vec4 particle = bf( vec2( ivec2( (i/3) % int( sqrtParticles ), (i/3) / int( sqrtParticles ) ) ) )\
vec4 hpart = vec4( particle.xyz, 0.0 )\

vec3 right = vec3( worldUnrotation[ 0 ][ 0 ], worldUnrotation[ 1 ][ 0 ], worldUnrotation[ 2 ][ 0 ])\
vec3 up    = vec3( worldUnrotation[ 0 ][ 1 ], worldUnrotation[ 1 ][ 1 ], worldUnrotation[ 2 ][ 1 ])\
vec3 wp = particle.xyz + ( right * vert.x + up * vert.y ) * particle.w\

ret = proj*worldUnrotation*( hpart +
                             -vec4( origin, 0.0 ) + //rot *
                             vec4(wp, 1.0 ) )\
	   
color = vec4( af( vec2( float(i%3) + 0.5, 1 ) ).xyz, ret.z / ret.w )\
'
in vec4 color\
'
float weight = exp( -10.0 * color.w )\
vec3 wcolor = weight * color.xyz\
ret[0] = vec4( wcolor, weight )\
' 2 1 4;
additive;

6;1;dup;shape;c''''
vec4 wcolor = af( tf )\
ret[0]= wcolor / wcolor.a\
' 1 1 4;


l'end';


